sum(!is.na(weather))
sum(is.na(colnames(weather)))
is.na(colnames(weather))
colnames(weather)
source('~/Development/NASA Clear To Take Off/Prediction Model/checkNa.r', echo=TRUE)
source('~/Development/NASA Clear To Take Off/Prediction Model/checkNa.r', echo=TRUE, local = environment())
lapply(traffic, colnames(traffic), checkNa)
colnames(traffic)
lapply(traffic, colnames(traffic), checkNa)
lapply(traffic, checkNa, y=colnames(traffic))
source('~/Development/NASA Clear To Take Off/Prediction Model/checkNa.r', echo=TRUE, local = environment())
lapply(colnames(atl), checkNa)
warning()
warnings()
checkNa(colnames(traffic))
as.name(colnames(traffic))
colnames(traffic)
c <- colnames(traffic)
c
as.name(c[1])
as.name(c[2])
lapply(colnames(atl), checkNa)
checkNa(Date)
colnames(atl)[colSums(is.na(atl)) > 0]
colSums(is.na(atl)) > 0
?colSums
sum(is.na(atl$DepTime))
sum(is.na(atl$CRSDepTime))
sum(is.na(atl$ArrTime))
atl$Cancelled[1]
atl$Cancelled[4]
class(atl$Cancelled)
str(atl$Cancelled)
unique(atl$Cancelled)
atl[(is.na(atl$DepTime) & )]
a & b
TRUE & FALSE
TRUE && FALSE
TRUE && TRUE
atl[(is.na(atl$DepTime) & (atl$Cancelled == FALSE)]
atl[(is.na(atl$DepTime) & (atl$Cancelled == FALSE),]
atl[(is.na(atl$DepTime) & (atl$Cancelled == FALSE)),]
atl[(is.na(atl$DepTime) && (atl$Cancelled == FALSE)),]
t <- function(x){}
t <- function(x){
if((x$Cancelled !=TRUE) && (is.na(x$DepTime)))
cat(x,"\n")
}
lapply(atl, t)
lapply(atl[,], t)
atl[atl$Cancelled == FALSE && is.na(atl$DepTime),]
atl[atl$Cancelled == FALSE & is.na(atl$DepTime),]
atl[ is.na(atl$DepTime),]
atl[Cancelled == False,]
if(atl$Cancelled == False && atl$DepTime == NA)
atl
atl[atl$Cancelled == FALSE,]
atl[atl$Cancelled == 0 & is.na(atl$DepTime),]
atl[atl$Cancelled == 1 & is.na(atl$DepTime),]
0 == FALSE
0 == TRUE
1 == TRUE
atl[atl$Cancelled == FALSE & is.na(atl$DepTime),]
atl[atl$Cancelled == TRUE & is.na(atl$DepTime),]
colSums(is.na(colnames(atl)))
colSums(is.na(atl)) > 0
atl$ActualElapsedTime[1]
atl$DepTime[1] - atl$ArrTime[1]
atl[atl$Cancelled == FALSE & is.na(atl$ArrDelay),]
rowsums(atl[atl$Cancelled == FALSE & is.na(atl$ArrDelay),])
nrow(atl[atl$Cancelled == FALSE & is.na(atl$ArrDelay),])
median(atl$ArrDelay)
mean(atl$ArrDelay)
summary(atl$ArrDelay)
colSums(is.na(atl)) > 0
atl[atl$Cancelled == FALSE & is.na(atl$DepTime)]
atl[atl$Cancelled == FALSE & is.na(atl$DepTime),]
nrows(atl[atl$Cancelled == FALSE & is.na(atl$DepTime),])
nrow(atl[atl$Cancelled == FALSE & is.na(atl$DepTime),])
nrow(atl[atl$Cancelled == FALSE & is.na(atl$DepDelay),])
nrow(atl[atl$Cancelled == TRUE & is.na(atl$DepDelay),])
nrows(is.na(atl$DepDelay))
nrow(is.na(atl$DepDelay))
colSums(is.na(atl$DepDelay))
is.na(atl$DepDelay)
sum(atl$DepDelay)
sum(is.na(atl$DepDelay))
nrow(atl[atl$Cancelled == TRUE & is.na(atl$DepDelay),])
colSums(is.na(atl)) > 0
sum(is.na(atl$ArrDelay))
nrow(atl[atl$Cancelled == TRUE & is.na(atl$ArrDelay),])
nrow(atl[atl$Cancelled == FALSE & is.na(atl$ArrDelay),])
summary(atl[atl$Cancelled == FALSE & is.na(atl$ArrDelay),22:26])
atl[atl$Cancelled == FALSE & is.na(atl$ArrDelay),22]
?length
length(atl$ArrDelay)
miss <- function(x){sum(is.na(x))/length(x)*100}
apply(atl,miss)
apply(atl,1,miss)
?apply
miss(atl$ArrDelay)
colSums(is.na(atl)) > 0
miss(atl$DepTime)
miss(atl$ArrTime)
miss(atl$ActualElapsedTime)
miss(atl$ArrDelay)
miss(atl$DepDelay)
install.packages("mice")
library(mice)
md.pattern(atl)
colSums(is.na(atl)) > 0
summary(atl$ArrDelay)
atl[atl$Cancelled == FALSE & is.na(atl$ArrDelay),atl$ArrDelay]
atl[atl$Cancelled == FALSE & is.na(atl$ArrDelay),]$ArrDelay
summary(atl[atl$Cancelled == FALSE & is.na(atl$ArrDelay),22:26])
summary(atl[atl$Cancelled == FALSE & is.na(atl$ArrDelay),atl$DepDelay])
summary(atl[atl$Cancelled == FALSE & is.na(atl$ArrDelay),]atl$DepDelay)
atl[atl$Cancelled == FALSE & is.na(atl$ArrDelay),]atl$DepDelay
atl[atl$Cancelled == FALSE & is.na(atl$ArrDelay),]$DepDelay
summary(atl[atl$Cancelled == FALSE & is.na(atl$ArrDelay),]$DepDelay)
colSums(is.na(atl)) > 0
sum(is.na(atl$DepDelay))
nrow(atl[atl$Cancelled == FALSE & is.na(atl$DepDelay),])
nrow(atl[atl$Cancelled == TRUE & is.na(atl$DepDelay),])
nrow(atl[atl$Cancelled == FALSE & is.na(atl$WeatherDelay),])
SUM(is.na(atl$WeatherDelay))
sum(is.na(atl$WeatherDelay))
save.image("~/Development/NASA Clear To Take Off/Prediction Model/workspace.RData")
load("~/Development/NASA Clear To Take Off/Prediction Model/workspace.RData")
nrow(atl[atl$Cancelled==FALSE & is.na(atl$ArrDelay),])
3605/1670013*100
nrow(atl[atl$Cancelled==FALSE & !is.na(atl$ArrDelay),])
cpy <- atl
nrow(cpy[cpy$Cancelled==FALSE & !is.na(cpy$ArrDelay),])
summary(cpy[cpy$Cancelled==FALSE & is.na(cpy$ArrDelay),])
head(cpy[cpy$Cancelled==FALSE & is.na(cpy$ArrDelay),])
?na.omit
na.action(cpy$ArrDelay)
na.action(cpy)
DF <- data.frame(x = c(1, 2, 3), y = c(0, 10, NA))
DF
na.omit(DF)
DF <- data.frame(x = c(1, 2, 3), y = c(0, 10, NA))
na.omit(DF$y)
DF
DF <- data.frame(x = c(1, 2, 3), y = c(0, 10, NA), z= c(NA, 10, 20))
?complete.cases
DF[complete.cases(DF[,])]
DF
DF[!is.na(DF$y),]
DF <- data.frame(x = c(NA, 1, 3, 5, NA, 9), y = c(2, 4, 6, NA, 19, NA), z = c(11, NA, 12, 13, 14, 15))
DF
DF[!is.na(DF$z) & is.na(DF$x),]
DF[!is.na(DF$z) ,]
DF <- data.frame(x = c(1, 0, 0, 1, 1, 0), y = c(2, 4, 6, NA, 19, NA), z = c(11, NA, 12, 13, 14, 15))
DF[!is.na(DF$z) & DF$x == FALSE ,]
DF
DF[DF$x == TRUE & !is.na(DF$y),]
nrow(cpy[cpy$Cancelled==FALSE & !is.na(cpy$ArrDelay),])
head(cpy[cpy$Cancelled==FALSE & is.na(cpy$ArrDelay),])
nrow(cpy[cpy$Cancelled==FALSE & is.na(cpy$ArrDelay),])
nrow(cpy[cpy$Cancelled == FALSE & !is.na(cpy$ArrDelay),])
1670013 - 3605
cpy <- cpy[cpy$Cancelled == FALSE,]
nrow(cpy)
nrow(atl) - nrow(cpy)
33086 / nrow(atl) * 100
nrow(cpy) / nrow(atl) * 100
unique(cpy$Cancelled)
DF
complete.cases(DF[,y])
complete.cases(DF[,2])
DF[complete.cases(DF[,2]),]
nrow(cpy[is.na(cpy$ArrDelay),])
nrow(cpy[!is.na(cpy$ArrDelay),])
sum(complete.cases(cpy, cpy$ArrDelay))
nrow(cpy[complete.cases(cpy, cpy$ArrDelay),])
sum(is.na(DF$y))
nrow(cpy[complete.cases(cpy[,cpy$ArrDelay]])
nrow(cpy[complete.cases(cpy[,cpy$ArrDelay])])
comp <- complete.cases(cpy[,cpy$ArrDelay])
comp <- complete.cases(cpy[,12])
nrow(cpy[comp,])
nrow(cpy[is.na(cpy$ArrDelay),])
nrow(cpy[!is.na(cpy$ArrDelay),])
nrow(cpy) - 3605
comp <- complete.cases(cpy[,12])
nrow(!is.na(cpy$ArrDelay))
sum(!is.na(cpy$ArrDelay))
nrow(cpy[comp,])
cpy <- cpy[comp,]
sum(is.na(cpy)) > 0
colnames(sum(is.na(cpy)) > 00
;
colnames(sum(is.na(cpy)) > 0)
colSums(is.na(cpy)) > 0
rm(DF)
rm(weatherATL)
rm(t)
miss
rm(miss)
df
rm(df)
str(tmp)
rm(tmp)
atl <- atl[atl$Cancelled == FALSE,]
# removed cancelled values
#removing arrdelay NA values
which(colnames(atl) == "ArrDelay")
comp <- complete.cases(atl[,12])
sum(comp)
sum(!is.na(atl$ArrDelay))
atl <- atl[comp,]
nrow(atl)
#removed NA values for arrdelay
summary(atl$ArrDelay)
usm(is.na(atl$ArrDelay))
sum(is.na(atl$ArrDelay))
colSums(is.na(atl)) > 0
(colSums(is.na(atl)) > 0) == TRUE
colSums(is.na(atl)) > 0
DF <- data.frame(x = c(1:5), y = c(NA, 1, 2, 4, 5), z = c(2, NA, 6, NA, 8))
DF
na.omit(DF)
DF
nrow(na.omit(atl))
nrow(na.omit(atl)) / nrow(atl) * 100
which(colnames(atl) == "WeatherDelay")
which(colnames(atl) == "LateAircraftDelay")
DF
DF[,2,3]
DF[,c(2,3)]
DF
DF <- data.frame(x = c(NA, 1, 2, NA, 3), y = c(1:5), z = c(1, NA, 3, 4, 5), p = c(9, 10, NA, 11, 12))
DF
c <- complete.cases(DF[,c(1,4)])
DF[c,]
DF <- data.frame(x = c(NA, 1, NA, 6, 3), y = c(1:5), z = c(1, NA, 3, 4, 5), p = c(9, 10, NA, 11, 12))
c <- complete.cases(DF[,c(1,4)])
DF[c,]
DF <- data.frame(x = c(NA, 1, NA, 6, 3), y = c(1:5), z = c(1, NA, 3, 4, 5), p = c(9, 10, NA, 11, 12))
DF
c <- complete.cases(DF[,c(1,4)])
DF[c,]
c <- complete.cases(DF[,c(1,3)])
DF[c,]
comp <- complete.cases(atl[,c(23,26)])
nrow(atl[comp,])
nrow(atl[is.na(atl$LateAircraftDelay) & is.na(atl$WeatherDelay),])
nrow(atl) - nrow(atl[is.na(atl$LateAircraftDelay) & is.na(atl$WeatherDelay),])
atl <- atl[comp,]
nrow(atl)
colSums(is.na(atl)) > 0
is.na(atl)
sum(is.na(atl))
nrow(atl) / nrow(ATL) *100
#removed all na values
is.na(weather)
sum(is.na(weather))
str(weather)
cpy <- atl
cpy$tmpf <- weather[cpy$Date == weather$Date & cpy$CRSDepTime == weather$Time, weather$tmpf]
?merge
DF
DF2 <- data.frame(a = c(6:10), y = c(1:5), c = c(10:15), z = c(9,10,NA,11,12))
DF2 <- data.frame(a = c(6:11), y = c(1:5), c = c(10:15), z = c(9,10,NA,11,12))
DF2 <- data.frame(a = c(6:11), y = c(1:5), c = c(11:15), z = c(9,10,NA,11,12))
DF2 <- data.frame(a = c(6:10), y = c(1:5), c = c(11:15), z = c(9,10,NA,11,12))
DF2
DF
merge(DF,DF2)
merge(DF,DF2, by="y")
names(DF2) <- c(a, y, c, p)
names(DF2) <- c('a', 'y', 'c', 'p')
DF2
merge(DF, DF2, by= c("y", "p"))
DF DF2
DF
DF2
merge(DF, DF2, by= c("y", "p"))
DF2 <- DF2[1:3,]
merge(DF, DF2, by= c("y", "p"))
a1 <- head(atl)
w1 <- head(weather)
a1
w1
for(i in atl){
for(j in weather){
if(;)
for(i in a1){
for(j in w1){
if(a1$Date[i] == w1$Date[j]){
if(a1$CRSDepTime[i] == w1$Time[j]){
a1$tmpf[i] = w1$tmpf[i]
a1$dwpf[i] = w1$dwpf[i];
;
;
;;
;a
a
a
a
a"""
for(i in a1){     for(j in w1){
+         if(a1$Date[i] == w1$Date[j]){
+             if(a1$CRSDepTime[i] == w1$Time[j]){
'''
"a"
a""
"A"Q{pls[ql[p]]}
dqd
dqd
q
dq
d
q
d
;;;;
[q]
a1[1]$Date
source('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R')
source('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R', local = environment())
mergeWeather()
source('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R', local = environment())
mergeWeather()
for(i in a1)
for(i in a1)
for(i in a1)
for(i in a1)
for(i in a1)
for(i in a1)
for(i in a1)
{
View(mergeWeather)
View(mergeWeather)
;
''
''
''
''
'\\'];
debugSource('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R')
debugSource('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R')
debugSource('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R', echo=TRUE)
debugSource('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R', echo=TRUE, local = environment())
debugSource('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R', echo=TRUE)
load("~/Development/NASA Clear To Take Off/Prediction Model/workspace.RData")
source('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R')
source('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R', local = environment())
mergeWeather()
str(a1)
a1$tmpf <- NA
mergeWeather()
a1$tmpf
source('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R', local = environment())
mergeWeather()
mergeWeather()
cat("\n", a1$tmpf[i], w1$tmpf[j], a1$Date[i], w1$Date[j])
for(i in nrow(a1)){
for(j in nrow(w1)){
if(a1$Date[i] == w1$Date[j] && a1$CRSDepTime[i]==w1$Time[j]){
a1$tmpf[i] = w1$tmpf[j]
cat("\n", a1$tmpf[i], w1$tmpf[j], a1$Date[i], w1$Date[j])
}
}
}
a1$tmpf
str(a1)
nrow(a1)
nrow(w1)
source('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R', local = environment())
mergeWeather()
mergeWeather
mergeWeather()
View(a1)
source('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R', local = environment())
mergeWeather()
source('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R', local = environment())
mergeWeather()
source('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R', local = environment())
mergeWeather()
source('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R', local = environment())
mergeWeather()
source('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R', local = environment())
mergeWeather()
rm(a1,w1)
rm(DF2,DF)
cpy <- atl
source('~/Development/NASA Clear To Take Off/Prediction Model/Untitled.R', local = environment())
mergeWeather()
history
history()
load("~/Development/NASA Clear To Take Off/Prediction Model/workspace.RData")
atl <- atl[atl$Cancelled == FALSE,]
rm(cpy)
colSums(is.na(atl))>0
which(colnames(atl) == "ArrDelay")
comp <- complete.cases(atl[,12])
sum(comp)
sum(!is.na(atl$ArrDelay))
atl <- atl[comp,]
nrow(atl)
#removed NA values for arrdelay
summary(atl$ArrDelay)
sum(is.na(atl$ArrDelay))
colSums(is.na(atl)) > 0
comp <- complete.cases(atl[,c(23,26)])
nrow(atl[comp,])
nrow(atl[is.na(atl$LateAircraftDelay) & is.na(atl$WeatherDelay),])
nrow(atl) - nrow(atl[is.na(atl$LateAircraftDelay) & is.na(atl$WeatherDelay),])
atl <- atl[comp,]
nrow(atl)
colSums(is.na(atl)) > 0
is.na(atl)
sum(is.na(atl))
nrow(atl) / nrow(ATL) *100
#removed all na values
is.na(weather)
sum(is.na(weather))
save.image("~/Development/NASA Clear To Take Off/Prediction Model/env.RData")
load("~/Development/NASA Clear To Take Off/Prediction Model/env.RData")
load("~/Development/NASA Clear To Take Off/Prediction Model/env.RData")
install.packages("doParallel")
library(doParallel)
system.time(foreach(i=1:10000) %do% sum(tanh(1:i)))
quit()
load("~/Development/NASA Clear To Take Off/Prediction Model/env.RData")
library(doParallel)
source('~/Development/NASA Clear To Take Off/Prediction Model/mergeWeather.R')
source('~/Development/NASA Clear To Take Off/Prediction Model/mergeWeather.R', local = environment())
system.time(mergeWeather())
cpy <- atl
source('~/Development/NASA Clear To Take Off/Prediction Model/mergeWeather.R', local = environment())
system.time(mergeWeather())
getDoParWorkers()
registerDoParallel(cores = 4)
getDoParWorkers()
source('~/Development/NASA Clear To Take Off/Prediction Model/mergeWeather.R', local = environment())
system.time(mergeWeather())
registerDoParallel()
getDoParWorkers()
source('~/Development/NASA Clear To Take Off/Prediction Model/mergeWeather.R', local = environment())
system.time(mergeWeather())
rm(min())
rm(miss)
rm(t)
rm(i,j,tmp,comp)
rm(c)
rm(u)
rm(temp)
save.image("~/Development/NASA Clear To Take Off/Prediction Model/env.RData")
atl$Year <- as.numeric(format(atl$Date, format = "%Y"))
atl$Year[1]
atl$Month <- as.numeric(format(atl$Date, format = "%m"))
atl$Day <- as.numeric(format(atl$Date, format = "%d"))
atl[1]
atl[1,]
atl[1919,]
unique(atl$Year)
atl2006 <- atl[atl$Year == 2006,]
unique(atl2006$Year)
atl2007 <- atl[atl$Year == 2007,]
atl2008 <- atl[atl$Year == 2008,]
atl2005 <- atl[atl$Year == 2005,]
View(traffic)
rm(cpy)
rm(traffic)
str(atl)
max(c(nrow(atl2005), nrow(atl2006), nrow(atl2007), nrow(atl2008)))
rm(df)
rm(checkNa())
rm(checkNa)
rn(findBusiest())
rn(findBusiest
rn(findBusiest)
rn(findBusiest)
rm(findBusiest)
rm(mergeWeather())
rm(mergeWeather)
weather$Year <- as.numeric(format(weather$Date, format = "%Y"))
weather$Month <- as.numeric(format(weather$Date, format = "%m"))
weather$Day <- as.numeric(format(weather$Date, format = "%d"))
weather[1018,23:25]
weather[1018,22:25]
weather[1018,21:25]
weather2005 <- weather[weather$Year == 2005,]
weather2006 <- weather[weather$Year == 2006,]
weather2007 <- weather[weather$Year == 2007,]
weather2008 <- weather[weather$Year == 2008,]
rm(weather2006,weather2007,weather2008)
nrow(weather2005)*nrow (atl2005)
getwd
getwd()
weather2008 <- read.csv("DataSets/2008.txt")
nrow(weather2008)
unique(atl2005$UniqueCarrier)
str(weather2005)
weather2008$Date <- as.Date(weather2008$valid)
weather2008[54,weather2008$valid]
weather2008[54,valid]
weather2008[54,'valid']
weather2008$Date[54]
format(as.POSIXct(weather2008$valid) ,format = "%H:%M:%S")
format(as.POSIXct(weather2008$valid[45]) ,format = "%H:%M:%S")
weather$valid[45]
weather2008$valid[45]
format(as.POSIXct(weather2008$valid[45]) ,format = "%H:%M")
weather2008$Time <- format(as.POSIXct(weather2008$valid),format = "%H:%M")
weather$Time[89]
weather2008$valid[89]
weather2008$Time[89]
savehistory(file = "hist.Rhistory")
